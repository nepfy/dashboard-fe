#!/usr/bin/env tsx

import { db } from "#/lib/db";

async function fixRemainingErrors() {
  console.log("üîß Corrigindo erros restantes de portugu√™s...\n");

  try {
    // Primeiro, vamos verificar o que realmente est√° no banco
    console.log("üîç Verificando conte√∫do atual...");

    const agents = await db.execute(`
      SELECT id, name, system_prompt
      FROM agents 
      WHERE id LIKE '%-flash-agent'
      ORDER BY id
    `);

    for (const agent of agents.rows) {
      console.log(`\nüìã ${agent.name} (${agent.id})`);

      const prompt = agent.system_prompt || "";

      // Procurar por "atra√ß√£o" (incorreto)
      const atracaoIncorrectCount = (prompt.match(/atra√ß√£o/g) || []).length;
      const atracaoCorrectCount = (prompt.match(/atra√ß√£o/g) || []).length;

      console.log(
        `   'atra√ß√£o' (incorreto): ${atracaoIncorrectCount} ocorr√™ncias`
      );
      console.log(`   'atra√ß√£o' (correto): ${atracaoCorrectCount} ocorr√™ncias`);

      if (atracaoIncorrectCount > 0) {
        console.log("   ‚ùå Precisa corre√ß√£o");

        // Mostrar contexto
        const index = prompt.indexOf("atra√ß√£o");
        if (index !== -1) {
          const context = prompt.substring(Math.max(0, index - 20), index + 30);
          console.log(`   Contexto: "...${context}..."`);
        }
      } else {
        console.log("   ‚úÖ J√° est√° correto");
      }
    }

    console.log("\n" + "=".repeat(80));
    console.log("üîß Aplicando corre√ß√µes...");

    // Corrigir "atra√ß√£o" ‚Üí "atra√ß√£o" em todos os agentes Flash
    const result = await db.execute(`
      UPDATE agents 
      SET system_prompt = REPLACE(system_prompt, 'atra√ß√£o', 'atra√ß√£o'),
          updated_at = NOW()
      WHERE id LIKE '%-flash-agent' 
      AND system_prompt LIKE '%atra√ß√£o%'
    `);

    console.log(`‚úÖ ${result.rowCount} agentes atualizados`);

    console.log("\nüîç Verificando ap√≥s corre√ß√£o...");

    const agentsAfter = await db.execute(`
      SELECT id, name, system_prompt
      FROM agents 
      WHERE id LIKE '%-flash-agent'
      ORDER BY id
    `);

    let stillHasErrors = 0;
    for (const agent of agentsAfter.rows) {
      const prompt = agent.system_prompt || "";
      const atracaoIncorrectCount = (prompt.match(/atra√ß√£o/g) || []).length;

      if (atracaoIncorrectCount > 0) {
        stillHasErrors++;
        console.log(
          `‚ùå ${agent.name} ainda tem ${atracaoIncorrectCount} ocorr√™ncias de 'atra√ß√£o' (incorreto)`
        );
      } else {
        console.log(`‚úÖ ${agent.name} est√° correto`);
      }
    }

    if (stillHasErrors === 0) {
      console.log("\nüéâ Todos os erros foram corrigidos!");
    } else {
      console.log(`\n‚ö†Ô∏è Ainda h√° ${stillHasErrors} agentes com erros.`);
    }
  } catch (error) {
    console.error("‚ùå Erro ao corrigir agentes:", error);
  }
}

fixRemainingErrors().catch(console.error);

